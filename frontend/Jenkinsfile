pipeline {
    agent any

    environment {
        DOCKERHUB_USERNAME = 'agida0413'
        SOURCE_REPO = 'https://github.com/Bottle-Story/bottle-story-frontend.git'
        DEVOPS_REPO = 'https://github.com/Bottle-Story/bottle-story-devops.git'
        FRONTEND_DIR = 'frontend'
    }

    stages {
        stage('소스 레포 체크아웃') {
            steps {
                dir('web-src') {
                    git branch: 'develop', url: "${SOURCE_REPO}"
                }
            }
        }

        stage('데브옵스 레포 체크아웃') {
            steps {
                dir("${FRONTEND_DIR}") {
                    git branch: 'main', url: "${DEVOPS_REPO}"
                }
            }
        }

        stage('소스 파일 복사') {
            steps {
                sh """
                    # frontend 폴더 덮어쓰기 (기존 파일 제거 포함)
                    rsync -av --delete web-src/ ${FRONTEND_DIR}/
                """
            }
        }

        stage('Docker 이미지 빌드 및 Push') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker_password', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh '''
                        echo "$PASSWORD" | docker login -u "$USERNAME" --password-stdin
                    '''
                }

                // Dockerfile 경로와 빌드 컨텍스트 명확히 지정
                sh "docker build -t ${DOCKERHUB_USERNAME}/frontend-bottle:latest -f ${FRONTEND_DIR}/Dockerfile-dev ${FRONTEND_DIR}"
                sh "docker push ${DOCKERHUB_USERNAME}/frontend-bottle:latest"
            }
        }

        stage('쿠버네티스 배포') {
            steps {
                withCredentials([file(credentialsId: 'k8s_master_config', variable: 'KUBECONFIG')]) {
                    sh """
                        helm upgrade --install frontend-bottle ${FRONTEND_DIR}/helm \
                        --values ${FRONTEND_DIR}/helm/values-dev.yaml \
                        --namespace frontend-bottle
                    """
                }
            }
        }
    }
}
