pipeline {
    agent any

    tools {
        gradle 'gradle-8.3'
        jdk 'jdk-17'
    }

    environment {

        DOCKERHUB_USERNAME = 'agida0413'
        RELEASE_GITHUB_URL = 'https://github.com/Bottle-Story/bottle-story-devops.git'
        APP_GITHUB_URL = 'https://github.com/Bottle-Story/bottle-story-wheather-bgm.git'

    }

    stages {
        stage('소스파일 체크아웃') {
            steps {
                git branch: 'develop', url: "${APP_GITHUB_URL}"
            }
        }

        stage('소스 빌드') {
            steps {

                sh "chmod +x ./gradlew"
                sh "gradle clean build -x test"
            }
        }

        stage('릴리즈파일 체크아웃') {
            steps {
                dir('release') {
                    checkout([$class: 'GitSCM',
                              branches: [[name: 'main']],
                              userRemoteConfigs: [[url: "${RELEASE_GITHUB_URL}"]]
                    ])
                }
            }
        }
        stage('파일 위치 확인') {
            steps {
                sh 'find . -name Dockerfile-dev'
                        sh 'find . -name "*.jar"'
                        sh 'ls -lR | grep ".jar"'
            }
        }
        stage('컨테이너 빌드') {
            steps {
                    // release/wheatherbgm 폴더로 jar 복사
                    sh 'cp ./build/libs/bottle-wheatherbgm-dev-0.0.1-SNAPSHOT.jar release/wheatherbgm/'

                withCredentials([usernamePassword(credentialsId: 'docker_password', passwordVariable: 'PASSWORD', usernameVariable: 'USERNAME')]) {
                    sh '''
                        echo "$PASSWORD" | docker login -u "$USERNAME" --password-stdin
                    '''
                }

                 sh "docker build -t ${DOCKERHUB_USERNAME}/backend-bottle-wheatherbgm:latest -f release/wheatherbgm/Dockerfile-dev release/wheatherbgm"


            }
        }

        stage('컨테이너 업로드') {
            steps {
                sh "docker push ${DOCKERHUB_USERNAME}/backend-bottle-wheatherbgm:latest"
            }
        }

        stage('쿠버네티스 배포') {
            steps {
                withCredentials([file(credentialsId: 'k8s_master_config', variable: 'KUBECONFIG')]) {
                    sh "helm upgrade --install backend-bottle-wheatherbgm release/wheatherbgm/helm \
                          --values release/wheatherbgm/helm/values-dev.yaml \
                          --namespace backend-bottle"
                }
            }
        }
    }
}
